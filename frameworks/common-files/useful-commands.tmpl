{{if .IsGrpcServer }}
# grpcurl commands for gRPC Server

# Install grpcurl to access grpc services
    go get github.com/fullstorydev/grpcurl/...
    go install github.com/fullstorydev/grpcurl/cmd/grpcurl

# To check the services available
    grpcurl -plaintext localhost:{{.GrpcServerPort}} list

# To check the rpc's available inside a specific service
    grpcurl -plaintext localhost:{{.GrpcServerPort}} list pb.BasicService
    # grpcurl -plaintext localhost:{{.GrpcServerPort}} list serviceName

# To run a method from a service
    grpcurl -plaintext localhost:{{.GrpcServerPort}} pb.BasicService/Create
    # grpcurl -plaintext localhost:{{.GrpcServerPort}} serviceName/MethodName

# To describe any service
    grpcurl -plaintext -msg-template localhost:{{.GrpcServerPort}} describe pb.BasicService
    # grpcurl -plaintext -msg-template localhost:{{.GrpcServerPort}} describe serviceName

# To describe any method
    grpcurl -plaintext -msg-template localhost:{{.GrpcServerPort}} describe pb.BasicService.Get
    # grpcurl -plaintext -msg-template localhost:{{.GrpcServerPort}} describe serviceName.MethodName

# To describe any Message
    grpcurl -plaintext -msg-template localhost:{{.GrpcServerPort}} describe pb.MessageRequest
    # grpcurl -plaintext -msg-template localhost:{{.GrpcServerPort}} describe MessageName
{{end}}

{{if .IsRestServer }}
    {{range $i, $v := .RestResources}}
# Curl commands for REST Server resource {{$v.CapsResourceNameSingular}}
# Post
curl -X POST -H "Content-Type: application/json" \
-d '{{$v.ResourcePostBody}}' \
http://localhost:{{$.RestServerPort}}/v1/{{$v.SmallResourceNamePlural}}

# Get
curl -X GET -H "Content-Type: application/json" \
http://localhost:{{$.RestServerPort}}/v1/{{$v.SmallResourceNamePlural}}

# Put
curl -X PUT -H "Content-Type: application/json" \
-d '{{$v.ResourcePutBody}}' \
http://localhost:{{$.RestServerPort}}/v1/{{$v.SmallResourceNamePlural}}/123

# Put
### wrong id passed in param
curl -X PUT -H "Content-Type: application/json" \
-d '{{$v.ResourcePutBody}}' \
http://localhost:{{$.RestServerPort}}/v1/{{$v.SmallResourceNamePlural}}/1234

# Get  (retrieve specific {{$v.CapsResourceNameSingular}})
curl -X GET -H "Content-Type: application/json" \
http://localhost:{{$.RestServerPort}}/v1/{{$v.SmallResourceNamePlural}}/123

# Delete
curl -X DELETE -H "Content-Type: application/json" \
http://localhost:{{$.RestServerPort}}/v1/{{$v.SmallResourceNamePlural}}/123

    {{end}}

# when mysql throws error about server connection, fire below commands
# CREATE USER 'root'@'%' IDENTIFIED BY 'password';
# GRANT ALL PRIVILEGES ON *.* TO 'root'@'%';

{{end}}