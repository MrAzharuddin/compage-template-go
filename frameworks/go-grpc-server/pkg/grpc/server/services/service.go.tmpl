package services

import (
	"github.com/{{.UserName}}/{{.RepositoryName}}/{{.NodeName}}/pkg/grpc/server/daos"
	"github.com/{{.UserName}}/{{.RepositoryName}}/{{.NodeName}}/pkg/grpc/server/models"
)

type {{.CapsResourceNameSingular}}Service struct {}

var {{.SmallResourceNameSingular}}Dao = daos.{{.CapsResourceNameSingular}}Dao{}

func ({{.CapsResourceNameSingular}}Service *{{.CapsResourceNameSingular}}Service) Create{{.CapsResourceNameSingular}}({{.SmallResourceNameSingular}} models.{{.CapsResourceNameSingular}}) error {
	return {{.SmallResourceNameSingular}}Dao.Create{{.CapsResourceNameSingular}}({{.SmallResourceNameSingular}})
}

func ({{.CapsResourceNameSingular}}Service *{{.CapsResourceNameSingular}}Service) Get{{.CapsResourceNameSingular}}(id int64) (models.{{.CapsResourceNameSingular}}, error) {
	return {{.SmallResourceNameSingular}}Dao.Get{{.CapsResourceNameSingular}}(id)
}

func ({{.CapsResourceNameSingular}}Service *{{.CapsResourceNameSingular}}Service) List{{.CapsResourceNamePlural}}() ([]models.{{.CapsResourceNameSingular}}, error) {
	return {{.SmallResourceNameSingular}}Dao.List{{.CapsResourceNamePlural}}()
}

func ({{.CapsResourceNameSingular}}Service *{{.CapsResourceNameSingular}}Service) Update{{.CapsResourceNameSingular}}(id int64, {{.SmallResourceNameSingular}} models.{{.CapsResourceNameSingular}}) error {
	return {{.SmallResourceNameSingular}}Dao.Update{{.CapsResourceNameSingular}}(id, {{.SmallResourceNameSingular}})
}

func ({{.CapsResourceNameSingular}}Service *{{.CapsResourceNameSingular}}Service) Delete{{.CapsResourceNameSingular}}(id int64) error {
	return {{.SmallResourceNameSingular}}Dao.Delete{{.CapsResourceNameSingular}}(id)
}